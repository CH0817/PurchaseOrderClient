package tw.com.rex.service.product;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;

/**
 * This class was generated by Apache CXF 3.1.6
 * 2016-05-10T17:49:25.637+08:00
 * Generated source version: 3.1.6
 * 
 */
@WebService(targetNamespace = "http://service.web.com.tw/", name = "ProductWebService")
@XmlSeeAlso({ObjectFactory.class})
public interface ProductWebService {

    @WebMethod
    @RequestWrapper(localName = "insert", targetNamespace = "http://service.web.com.tw/", className = "tw.com.rex.service.product.Insert")
    @ResponseWrapper(localName = "insertResponse", targetNamespace = "http://service.web.com.tw/", className = "tw.com.rex.service.product.InsertResponse")
    @WebResult(name = "return", targetNamespace = "")
    public java.lang.String insert(
        @WebParam(name = "entity", targetNamespace = "")
        tw.com.rex.service.product.Product entity
    );

    @WebMethod
    @RequestWrapper(localName = "update", targetNamespace = "http://service.web.com.tw/", className = "tw.com.rex.service.product.Update")
    @ResponseWrapper(localName = "updateResponse", targetNamespace = "http://service.web.com.tw/", className = "tw.com.rex.service.product.UpdateResponse")
    @WebResult(name = "return", targetNamespace = "")
    public java.lang.String update(
        @WebParam(name = "entity", targetNamespace = "")
        tw.com.rex.service.product.Product entity
    );

    @WebMethod
    @RequestWrapper(localName = "checkDuplicate", targetNamespace = "http://service.web.com.tw/", className = "tw.com.rex.service.product.CheckDuplicate")
    @ResponseWrapper(localName = "checkDuplicateResponse", targetNamespace = "http://service.web.com.tw/", className = "tw.com.rex.service.product.CheckDuplicateResponse")
    @WebResult(name = "return", targetNamespace = "")
    public java.lang.String checkDuplicate(
        @WebParam(name = "productName", targetNamespace = "")
        java.lang.String productName,
        @WebParam(name = "userId", targetNamespace = "")
        java.lang.String userId
    );

    @WebMethod
    @RequestWrapper(localName = "findBySupplier", targetNamespace = "http://service.web.com.tw/", className = "tw.com.rex.service.product.FindBySupplier")
    @ResponseWrapper(localName = "findBySupplierResponse", targetNamespace = "http://service.web.com.tw/", className = "tw.com.rex.service.product.FindBySupplierResponse")
    @WebResult(name = "return", targetNamespace = "")
    public java.lang.String findBySupplier(
        @WebParam(name = "supplierIds", targetNamespace = "")
        java.util.List<java.lang.String> supplierIds
    );

    @WebMethod
    @RequestWrapper(localName = "delete", targetNamespace = "http://service.web.com.tw/", className = "tw.com.rex.service.product.Delete")
    @ResponseWrapper(localName = "deleteResponse", targetNamespace = "http://service.web.com.tw/", className = "tw.com.rex.service.product.DeleteResponse")
    @WebResult(name = "return", targetNamespace = "")
    public java.lang.String delete(
        @WebParam(name = "id", targetNamespace = "")
        java.lang.String id
    );

    @WebMethod
    @RequestWrapper(localName = "findAll", targetNamespace = "http://service.web.com.tw/", className = "tw.com.rex.service.product.FindAll")
    @ResponseWrapper(localName = "findAllResponse", targetNamespace = "http://service.web.com.tw/", className = "tw.com.rex.service.product.FindAllResponse")
    @WebResult(name = "return", targetNamespace = "")
    public java.lang.String findAll(
        @WebParam(name = "userId", targetNamespace = "")
        java.lang.String userId
    );

    @WebMethod
    @RequestWrapper(localName = "findByIds", targetNamespace = "http://service.web.com.tw/", className = "tw.com.rex.service.product.FindByIds")
    @ResponseWrapper(localName = "findByIdsResponse", targetNamespace = "http://service.web.com.tw/", className = "tw.com.rex.service.product.FindByIdsResponse")
    @WebResult(name = "return", targetNamespace = "")
    public java.lang.String findByIds(
        @WebParam(name = "ids", targetNamespace = "")
        java.util.List<java.lang.String> ids,
        @WebParam(name = "userId", targetNamespace = "")
        java.lang.String userId
    );

    @WebMethod
    @RequestWrapper(localName = "findById", targetNamespace = "http://service.web.com.tw/", className = "tw.com.rex.service.product.FindById")
    @ResponseWrapper(localName = "findByIdResponse", targetNamespace = "http://service.web.com.tw/", className = "tw.com.rex.service.product.FindByIdResponse")
    @WebResult(name = "return", targetNamespace = "")
    public java.lang.String findById(
        @WebParam(name = "id", targetNamespace = "")
        java.lang.String id,
        @WebParam(name = "userId", targetNamespace = "")
        java.lang.String userId
    );
}
